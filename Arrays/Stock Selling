You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

Solution:-
    class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        vector<int> minf(n, 0);
        vector<int> maxf(n, 0);
        minf[0] = prices[0];
        maxf[n - 1] = prices[n - 1];
        for (int i = 1; i < n; i++) {
            minf[i] = min(minf[i - 1], prices[i]);
        }
        for (int i = n - 2; i >= 0; i--) {
            maxf[i] = max(maxf[i + 1], prices[i]);
        }
        int mindi = 0;
        for (int i = 0; i < n; i++) {
            int k = maxf[i] - minf[i];
            if (k > mindi) {
                mindi = k;
            }
        }
        return mindi;
    }
};